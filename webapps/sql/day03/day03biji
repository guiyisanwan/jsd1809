###课程回顾
1. 数据库相关SQL：
- 查询所有 show databases;
- 创建数据库  create database db1 character set utf8/gbk;
- 查看详情 show create database db1;
- 删除数据库 drop database db1;
- 使用数据库 use db1;
2. 表相关SQL：
- 创建表 create table t1(name varchar(10),age int);
- 查询所有 show tables;
- 查询详情 show create table t1;
- 表字段  desc t1;
- 删除表 drop table t1;
- 改名  rename table t1 to t2;
- 修改引擎字符集 alter table t1 engine=myisam/innodb  charset=utf8/gbk;
- 添加表字段 alter table t1 add age int first/after xxx;
- 删除表字段 alter table t1 drop age;
- 修改字段名和类型 alter table t1 change 原名 新名 新类型;
- 修改字段类型和位置 alter table t1 modify 字段名 新类型 first/after xxx;
3. 数据相关SQL
- 插入数据 insert into t1 (字段名1,字段名2) values(值1,值2),(值1,值2);
- 查询数据 select * from t1 where id=10;
- 修改数据 update t1 set name='xxx' where id=1;
- 删除数据 delete from t1 where id<5;
4. 主键约束  primary key 
- 主键：表示数据唯一性的字段 
- 主键约束：唯一且非空 
5. 主键约束+自增 primary key auto_increment
- 从历史最大值基础上+1
- 只增不减
- 主键值不为0 
6. 注释 comment 
7. `用于修饰字段名和表名  '修饰字符串
8. 数据冗余：由于表设计不够合理导致的大量重复数据 ，通过合理拆分表的形式解决
9. 数据库事务：数据库中执行同一业务多条SQL语句的工作单元，可以保证全部执行成功或全部执行失败
- 开启事务 begin
- 提交事务 commit
- 回顾事务 rollback
- 保存回滚点 savepoint xxx;
- 回滚到某个回滚点 rollback to  xxx;
10. SQL分类
- DDL数据定义语言：包括create alter drop truncate  不支持事务
- DML数据操作语言：包括insert update delete select(DQL) 支持事务
- DQL数据查询语言：只包括select 
- TCL事务控制语言：包括事务相关的指令
- DCL 数据控制语言： 用于分配用户权限相关的SQL
11. 数据类型
- 整数： int(m) bigint(m)  m代表显示长度 需要结合zerofill 补0
- 浮点数： double(m,d) m代表总长度 d代表小数长度 超高精度浮点数decimal(m,d)
- 字符串： char固定长度 最大255 执行效率高  varchar可变长度 最大65535超高255建议使用text   text可变长度最大65535
- 日期： date年月日 time时分秒  datetime默认为null，最大9999-12-31  timestamp默认为当前系统时间，最大2038-01-19

###练习：
1. 创建数据库db3字符集为utf8  并使用
2. 创建hero表 有主键id和name，引擎为myisam，指定字符集为gbk
3. 修改表名为t_hero,引擎为innodb，字符集为utf8
4. 添加age字段在最后，添加type(字符串)在name的后面
5. 修改age到type的前面
6. 添加以下数据， type为法师的：诸葛亮30岁、周瑜25岁，type为战士的：张飞30岁、关羽35岁，type为射手的后裔50岁、黄忠60岁
7. 查询所有35岁以下的人物名称和人物类型(type)
8. 修改30岁英雄的年龄为29岁
9. 添加money字段在最后
10. 修改法师的money为18888
11. 修改大于等于50岁的money为6888
12. 删除所有战士

	从ftp上 下载文件  tables.zip 

####导入*.sql文件到数据库中 
1. windows系统
	把*.sql文件保存到D盘根目录
	在终端连接数据库后 中执行以下命令
	source d:/tables.sql;
2. linux系统
	把*.sql文件保存到桌面
	在终端连接数据库后 执行以下命令
	source /home/soft01/桌面/tables.sql;
3. 执行 show tables; 测试  查看是否有4张表


### is null 和 is not null
1. 查询奖金为null的所有员工信息
	select * from emp where comm is null;
2. 查询没有上级领导(mgr)的员工信息
	select * from emp where mgr is null;
3. 查询员工表中 有奖金的员工姓名、工资sal、奖金comm  
	select ename,sal,comm from emp where comm is not null and comm>0;
###别名
	select ename as '姓名',sal as '工资' from emp;
	select ename '姓名',sal '工资' from emp;
	select ename 姓名,sal 工资 from emp;
	最后一种 如果报错  set names gbk;
###去重 distinct
1. 查询员工表中出现的所有职位 不能重复
	select distinct job from emp;
###比较运算符 >,<,>=,<=,=,  !=和<>
1. 查询工资小于等于1600的员工姓名和工资
	select ename,sal from emp where sal<=1600;
2. 查询部门编号是20的所有员工姓名，职位job和工资
	select ename,job,sal from emp where deptno=20;
3. 查询职位是manager的所有员工姓名和职位
	select ename,job from emp where job='manager';
4. 查询部门编号deptno不是10号部门的所有员工姓名和部门编号（两种方式实现）
	select ename,deptno from emp where deptno!=10;
	select ename,deptno from emp where deptno<>10;
5. 查询t_item表中单价price等于23的商品标题title
	select title from t_item where price=23;
6. 查询t_item表中单价不等于8443的商品标题和单价
	select title,price from t_item where price!=8443;
### and 和 or
- and 和java 中的&&效果一样
- or  和java 中的||效果一样
1. 查询不是10号部门并且工资低于3000的员工信息
	select * from emp where deptno!=10 and sal<3000;
2. 查询部门编号deptno为30或者上级领导mgr为7698的员工姓名、上级领导和部门编号
	select ename,mgr,deptno from emp where deptno=30 or mgr=7698;
###in关键字
- 当查询字段的值为多个的时候使用in
1. 查询员工表中 工资为5000，1500，3000的员工信息
	select * from emp where sal=5000 or sal=1500 or sal=3000;
	select * from emp where sal in(5000,1500,3000);
###between x and y   包含x和y
2. 查询员工工资在2000到4000之间的员工信息
	select * from emp where sal>=2000 and sal<=4000;
	select * from emp where sal between 2000 and 4000;
####回顾+练习
1. is null 和 is not null
2. 别名 
3. 去重 distinct
4. 比较运算符 > <  >=  <=  =  !=和<>
5. and和or
6. in和between x and y
- 练习：
1. 查询员工表中奖金不为null的员工姓名和奖金 奖金和姓名使用别名
	select ename 姓名,comm 奖金 from emp where comm is not null;
2. 查询员工表中有哪些员工是领导 查询出编号 不能重复
	select distinct mgr from emp where mgr is not null;
3. 查询工资不等于2000并且不是30号部门的员工信息
	select * from emp where sal!=2000 and deptno!=30;
4. 查询单价为4539，4439，4639，4739的商品标题和单价
	select title,price from t_item where price in(4439,4539,4639,4739);
5. 查询单价在50到100之间的商品标题和单价
	select title,price from t_item where price between 50 and 100;
6. 查询单价不等于4539，4639，4739的商品标题
	select title,price from t_item where price not in(4539,4639,4739);
7. 查询单价在50到100之外的商品标题和单价
	select title,price from t_item where price not between 50 and 100;	
###模糊查询 like  像
- _：代表单个未知字符
- %：代表0或多个未知字符
- 例：  a开头：   a%  b结尾：%b    第二个字母是a： _a%   第二个字母是x倒数第三个字母是y：  _x%y__    包含字母x：%x%
1. 查询名字中包含字母a的员工姓名
	select ename from emp where ename like '%a%';
2. 查询标题中包含记事本的商品标题
	select title from t_item where title like '%记事本%';
3. 查询单价低于100的记事本(titile包含记事本)
	select title from t_item where title like '%记事本%' and price<100;
4. 查询单价50到200之间的得力商品信息(标题中包含得力)
	select * from t_item where price between 50 and 200 and title like '%得力%';
5. 查询有图片的得力商品(有图片意思是image字段不为null)
	select * from t_item where image is not null and title like '%得力%';
6. 查询有赠品的商品信息（卖点字段sell_point包含赠字）
	select * from t_item where sell_point like '%赠%';
7. 名字中不包含a的员工姓名
	select ename from emp where ename not like '%a%';
###排序 order by 
- 默认为升序  可以通过 asc 和desc控制升序和降序
- 如果有where，order by 写在where的后面
1. 查询员工表所有员工的姓名和工资要求安装工资升序asc或降序desc排序
	select ename,sal from emp order by sal desc;
2. 查询员工表中工资低于2000的姓名和工资，安装工资降序排序
	select ename,sal from emp where sal<2000 order by sal desc;
3. 查询所有员工的姓名、工资、部门编号,安装部门编号升序，工资降序排序
	select ename,sal,deptno from emp order by deptno,sal desc;
###分页查询 limit
- limit 跳过的条数,请求的条数（每页条数） 
- 举例： 第8页5条(35,5)  第6页的四条((6-1)*4,4)
1. 查询员工表中第一页的5条数据
	select * from emp limit 0,5;
2. 查询二页的4条数据
	select * from emp limit 4,4;
3. 查询第三页的两条数据
	select * from emp limit 4,2;
4. 查询工资最高的三个员工姓名和工资
	select * from emp order by sal desc limit 0,3;
###数值计算  + - * /       7%2  等效  mod(7,2)
1. 查询员工姓名,工资及年终奖(年终奖=工资*5)   
	select ename,sal,sal*5 年终奖 from emp;
2. 查询商品表中的商品单价、库存num和总金额(库存*单价) 
	select price,num,price*num 总金额 from t_item;
###和日期相关的函数 
- SQL语言的HelloWorld 
	select 'helloworld';
- 获取当前日期+时间   now()
	select now();
- 获取当前的日期  current当前
	select curdate();
- 获取当前的时间
	select curtime();
- 从完整的年月日时分秒中获取年月日 和 获取 时分秒
	select date(now()),time(now());
- 从完整的年月日时分秒中提取时间分量   extract
	extract(year/month/day/hour/minute/second from hiredate)
1. 查询每个员工入职的年份
	select ename,extract(year from hiredate) 入职年份 from emp;
- 日期格式化  date_format();
	date_format(时间,格式);
	%Y代表四位年  2018        
	%y代表两位年  18
	%m代表两位月  05
	%c代表一位月  5
	%d代表日
	%H代表 24小时
	%h代表 12小时
	%i代表 分
	%s代表 秒
	-把now()得到的时间格式转换成 年月日时分秒格式
	select date_format(now(),'%Y年%m月%d日 %H时%i分%s秒')
- 把非标准时间格式转回标准格式 str_to_date(非标准时间,格式);	
1. 把 14.10.2018 16:28:30 转回标准格式
	select str_to_date('14.10.2018 16:28:30','%d.%m.%Y %H:%i:%s');
### ifnull(x,y)
- age=ifnull(x,y) 翻译：如果x值为null则age=y 否则age=x
1. 修改员工表中如果现有奖金为null则修改为0否则不变 
	update emp set comm=ifnull(comm,0);

###聚合函数
- 用于对多行数据进行统计，平均值、最大值、最小值、求和、统计数量
1. 平均值： avg(字段名)
	举例：查询30号部门的平均工资
	select avg(sal) from emp where deptno=30;
2. 最大值： max(字段名)
	举例：查询20号部门的最高工资
	select max(sal) from emp where deptno=20;
3. 最小值: min(字段名)
	举例：查询10号部门的最底工资
	select min(sal) from emp where deptno=10;
4. 求和：sum(字段名)
	举例： 查询30号部门的奖金总和
	select sum(comm) from emp where deptno=30;
5. 统计数量： count(字段名)
	举例：统计所有员工的数量
	select count(*) from emp;
###字符串相关函数
1. 拼接  concat(s1,s2)  s1s2
	select concat('aa','bb');
- 案例： 查询每个员工的姓名和工资 工资后面有单位元
	select ename,concat(sal,'元') from emp;
2. 获取字符串长度 char_length(str)
- 查询：每个员工的姓名和姓名的长度
	select ename,char_length(ename) from emp;

3. 获取字符串A在字符串B中出现的位置  从1开始
	- instr(str,substr)
	select instr("abcdefg",'c');
4. 插入字符串 
	- insert(str,start,length,newstr)
	select insert('abcdefg',3,2,'m');
5. 转换大小写
	select upper('nba'),lower('NBa');
6. 去两端空白 
	select trim('  a b  ');  a b
7. 截取字符串
	select substring('abcdefg',2); //bcdefg
	select substring('abcdefg',2,3); //bcd     3代表长度
8. 重复
	select repeat('ab',2);   //abab
9. 替换
	select replace('abcdefg','c','mm'); //abmmdefg
10. 反转
	select reverse('abc'); //cba


### 练习
	1.案例：查询没有上级领导的员工的编号，姓名，工资
	2.案例：查询emp表中没有奖金的员工的姓名，职位，工资，以及奖金
	3.案例：查询emp表中含有奖金的员工的编号，姓名，职位，以及奖金
	4.案例：查询含有上级领导的员工的姓名，工资以及上级领导的编号
	5.案例：查询emp表中名字以‘S’开头的所有员工的姓名
	6.案例：查询emp表中名字的最后一个字符是'S'的员工的姓名
	7.案例：查询倒数的第2个字符是‘E’的员工的姓名
	8.案例：查询emp表中员工的倒数第3个字符是‘N’的员工姓名
	9.案例：查询emp表中员工的名字中包含‘A’的员工的姓名	
	10.案例：查询emp表中名字不是以'K'开头的员工的所有信息
	11.案例：查询emp表中名字中不包含‘A’的所有员工的信息
	12.案例：做文员的员工人数（job_id 中 含有 CLERK 的）
	13.案例：销售人员 job: SALESMAN 的最高薪水
	14.案例：最早和最晚入职时间
	15.案例：查询类别 163的商品总库存量
	16.案例：查询 类别 163 的商品
	17.案例：查询商品价格不大于100的商品名称列表
	18.案例：查询品牌是联想,且价格在40000以上的商品名称和价格
	19.案例：查询品牌是三木,或价格在50以下的商品名称和价格
	20.案例：查询品牌是三木、广博、齐心的商品名称和价格
	21.案例：查询品牌不是联想、戴尔的商品名称和价格
	22.案例：查找品牌是联想且价格大于10000的电脑名称
	23.案例：查询联想或戴尔的电脑名称列表
	24.案例：查询联想、戴尔、三木的商品名称列表
	25.案例：查询不是戴尔的电脑名称列表
	26.案例：查询所有是记事本的商品品牌、名称和价格
	27.案例：查询品牌是末尾字符是'力'的商品的品牌、名称和价格
	28.案例：名称中有联想字样的商品名称
	29.案例：查询卖点含有'赠'产品名称
	30.案例：查询emp表中员工的编号，姓名，职位，工资，并且工资在1000~2000之间。
	





	31.案例：查询emp表中员工在10号部门，并且含有上级领导的员工的姓名，职位，上级领导编号以及所属部门的编号
	32.案例：查询emp表中名字中包含'E'，并且职位不是MANAGER的员工的编号，姓名，职位，以及工资。	
	33.案例：查询emp表中10号部门或者20号部门中员工的编号，姓名，所属部门的编号
	34.案例：查询emp表中没有奖金或者名字的倒数第2个字母不是T的员工的编号，姓名，职位以及奖金
	35.案例：查询工资高于3000或者部门编号是30的员工的姓名，职位，工资，入职时间以及所属部门的编号	
	36.案例：查询不是30号部门的员工的所有信息
	37.案例：查询奖金不为空的员工的所有信息
	38.案例：查询emp表中所有员工的编号，姓名，职位，根据员工的编号进行降序排列
	39.案例：查询emp表中部门编号是10号或者30号中，所有员工姓名，职务，工资，根据工资进行升序排列
	40.案例：查询emp表中所有的数据，然后根据部门的编号进行升序排列，如果部门编号一致，根据员工的编号进行降序排列
	41.案例：查询emp表中工资高于1000或者没有上级领导的员工的编号，姓名，工资，所属部门的编号，以及上级领导的编号，根据部门编号进行降序排列，如果部门编号一致根据工资进行升序排列。
	42.案例：查询emp表中名字中不包含S的员工的编号，姓名，工资，奖金，根据工资进行升序排列，如果工资一致，根据编号进行降序排列
	43.案例：统计emp表中员工的总数量
	44.案例：统计emp表中获得奖金的员工的数量
	45.案例：求出emp表中所有的工资累加之和
	46.案例：求出emp表中所有的奖金累加之和
	47.案例：求出emp表中员工的平均工资
	48.案例：求出emp表中员工的平均奖金
	49.案例：求出emp表中员工的最高工资
	50.案例：求出emp表中员工编号的最大值
	51.案例：查询emp表中员工的最低工资。
	52.案例：查询emp表中员工的人数，工资的总和，平均工资，奖金的最大值，奖金的最小值,并且对返回的列起别名。
	53.案例：查询emp表中每个部门的编号，人数，工资总和，最后根据人数进行升序排列，如果人数一致，根据工资总和降序排列。
	54.案例：查询工资在1000~3000之间的员工信息，每个部门的编号，平均工资，最低工资，最高工资，根据平均工资进行升序排列。
	55.案例：查询含有上级领导的员工，每个职业的人数，工资的总和，平均工资，最低工资，最后根据人数进行降序排列，如果人数一致，根据平均工资进行升序排列
	56.案例：查询工资在1000~3000之间每一个员工的编号，姓名，职位，工资
	57.案例：查询emp表中奖金在500~2000之间所有员工的编号，姓名，工资以及奖金
	58.案例：查询员工的编号是7369，7521，	
	59.案例：查询emp表中，职位是ANALYST，
	60.案例：查询emp表中职位不是ANALYST,

elect * from emp where MGR is null;

select*from emp where comm is not null;
select ename, sal,comm from emp where comm is not null;
select ename, sal,comm from emp where comm is not null and comm>0;
select ename as'姓名',sal as'工资' from emp;
select ename '姓名',sal '工资' from emp;
select ename 姓名,sal 工资 from emp;

去重复 distinct 有区别的;
select distinct job from emp;

比较运算符,and(&&) or(||)
select ename , sal from emp where sal<1600;
select ename , job,sal, deptno from emp where deptno=20;
select ename 姓名, job 职位 from emp where job='manager';
select ename 姓名,deptno 部门编号 from emp where deptno !=10;
select ename 姓名,deptno 部门编号 from emp where deptno<>10;
select title 商品标题 from t_item where price=23;
select title 商品标题,price 单价 from t_item where price!=8443;
select*from emp where deptno!=10 && sal<3000;
select*from emp where deptno!=10 and sal<3000;
select ename ,mgr,deptno from emp where deptno=30 || mgr=7698;
select ename ,mgr,deptno from emp where deptno=30 or mgr=7698;


select*from emp where sal=5000 or sal=1500 or sal=3000;
select*from emp where sal in(5000,1500,3000);

select*from emp where sal>2000&&sal<4000;
select*from emp where sal between 2000 and 4000;


select comm 奖金,ename 姓名 from emp where comm is not null;
select distinct empno, mgr from emp where mgr is not null;
select * from emp where sal!=2000 and deptno!=30;
select title ,price from t_item where price in(4539,4439,4739);
select title ,price from t_item where price between 50 and 100;		

select title ,price from t_item where price not in(4539,4439,4739);
select title ,price from t_item where price not between 50 and 100;

模糊查询
 select ename from emp where ename like '%a%';	
select title  from t_item where title like '%笔记本%';
select * from t_item where title like '%得力%' and price between 50 and 100;
select * from t_item where title like '%得力%' and image is not null;
select *from t_item where sell_point like '%赠%';
select ename from emp where ename not like '%a%';

排序
order by
select ename , sal from emp order by sal;

select ename , sal from emp order by sal asc;生序;
select ename , sal from emp order by sal desc;将序
select ename , sal from emp where sal<2000 order by sal desc;
select ename ,sal,deptno from emp order by deptno asc,sal desc;//部门号生序//工资将序

分页查询limit
select*from emp limit 0,5;
select*from emp limit 4,4;
select*from emp limit 4,2;
select*from emp limit n,m;一页m条,跳过了n/m页
select ename, sal from emp order by sal desc  limit 0,3;

数值计算+,-*/    7%2等效 mod (7,2)
select ename ,sal ,sal*5 年终奖 from emp;
select price,num, price*num 总金额 from t_item;


和日期相关得函数
select 'helloworld';
select now();//年越日
select curtime();//时分秒
select date (now()),time(now());
select ename,extract(year from hiredate) 入职年份 from emp;
extract(year/month/day/hour/minute/second from hiredate)
select ename,extract(month from hiredate) 入职年份 from emp;
select ename,extract(year,month,day from hiredate) 入职时间 from emp;//错
select ename, hiredate 入职时间 from emp;


select date_format (now(), '%Y年%m月%d日 %H时%i分%s秒')
select str_to_date('14.10.2018 16:28:30','%d.%m.%Y %H:%i:%s');
update emp set comm = ifnull(comm,0);

聚合函数
select avg(sal)from emp where deptno=30;
select max(sal) from emp where deptno=20;
select min(sal) from emp where deptno=10;
select sum(comm) from emp where deptno=30;


select count(*)from emp;
select count(mgr)from emp;

字符窜相关函数
1拼接concat(s1,s2) s1s2
select concat('aa','bb');
select ename,concat(sal,'元') from emp;
2获取字符攒得长度char_length(str)
select ename, char_length(ename)from emp;
select instr('abcdefg','c');//c在字符此得位置
select insert ('abcdefghijk',3,2,'m');
select upper('nba'),lower('NBa');
select trim('   a b   ');
select substring('abcdefg',2);
select substring('abcdefg',2,3);
select repeat('ab',2);

 替换
	select replace('abcdefg','c','mm'); //abmmdefg
10. 反转
	select reverse('abc'); //cba



	
	















