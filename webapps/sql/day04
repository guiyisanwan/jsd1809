###课程回顾
1. is null 和 is not null 
2. 别名   
3. 去重 distinct 
4. 比较运算符  > < >= <= = !=和<>
5. and 和 or
6. in 
7. between x and y  包括x和y
8. 模糊查询  like   _单个未知字符  %代表0或多个未知字符
9. 排序 order by 字段1 asc/desc,字段2 asc/desc;
10. 分页  limit 跳过的条数,请求条数
11. 数值计算  + - * / % mod()
12. 日期：  now()    curdate()  curtime()  date(now())  time(now())   extract(year/month/day/hour/minute/second from now()) 
date_format(时间,格式)    %YymcdHhis   str_to_date(非标准时间,格式)
13. ifnull(x,y)
14. 聚合函数： 5个   平均值avg  最大值max 最小值min 求和sum 统计数量count(*)
15. 字符串相关： concat()   char_length()   instr()  insert()  upper() lower()  trim()   substring()   repeat()   replace()  reverse()

1. 案例：查询没有上级领导的员工的编号，姓名，工资
	select empno,ename,sal from emp where mgr is null;
2. 案例：查询emp表中没有奖金的员工的姓名，职位，工资，以及奖金
	select ename,job,sal,comm from emp where comm=0 or comm is null;
3. 案例：查询emp表中含有奖金的员工的编号，姓名，职位，以及奖金
	select ename,job,sal,comm from emp where comm>0;
4. 案例：查询含有上级领导的员工的姓名，工资以及上级领导的编号
	select empno,ename,sal from emp where mgr is not null;
5. 案例：查询emp表中名字以‘S’开头的所有员工的姓名
	select ename from emp where ename like 's%';
6. 案例：查询emp表中名字的最后一个字符是'S'的员工的姓名
	select ename from emp where ename like '%s';
7. 案例：查询倒数的第2个字符是‘E’的员工的姓名
	select ename from emp where ename like '%e_';
8. 案例：查询emp表中员工的倒数第3个字符是‘N’的员工姓名
	select ename from emp where ename like '%n__';
9. 案例：查询emp表中员工的名字中包含‘A’的员工的姓名	
	select ename from emp where ename like '%a%';
10. 案例：查询emp表中名字不是以'K'开头的员工的所有信息
	select * from emp where ename not like 'k%';
11. 案例：查询emp表中名字中不包含‘A’的所有员工的信息
	select * from emp where ename not like '%a%';
12. 案例：做文员的员工人数（job_id 中 含有 CLERK 的）
	select count(*) from emp where job='CLERK';
13. 案例：销售人员 job: SALESMAN 的最高薪水
	select max(sal) from emp where job='SALESMAN';
14. 案例：最早和最晚入职时间
	select min(hiredate),max(hiredate) from emp;
15. 案例：查询类别 163的商品总库存量
	select sum(num) from t_item where category_id=163;
16. 案例：查询 类别 163 的商品
	select * from t_item where category_id=163;
17. 案例：查询商品价格不大于100的商品名称列表
	select title from t_item where price <=100;
18. 案例：查询品牌是联想,且价格在40000以上的商品名称和价格
	select title,price from t_item where price>40000 and title like '%联想%';	
19. 案例：查询品牌是三木,或价格在50以下的商品名称和价格
	select title,price from t_item where price<50 or title like '%三木%';
20. 案例：查询品牌是三木、广博、齐心的商品名称和价格
	select title,price from t_item where title like '%三木%' or title like '%广博%' or title like '%齐心%';
21. 案例：查询品牌不是联想、戴尔的商品名称和价格
	select title,price from t_item where title not like '%联想%' 
	and title not like '%联想%';
27. 案例：查询品牌是末尾字符是'力'的商品的名称和价格
	select title,price from t_item where title like '%_力%';
30. 案例：查询emp表中员工的编号，姓名，职位，工资，并且工资在1000~2000之间。
	select empno,ename,job,sal from emp where sal between 1000 and 2000;
	
	31.案例：查询emp表中员工在10号部门，并且含有上级领导的员工的姓名，职位，上级领导编号以及所属部门的编号
	select ename,job,mgr,deptno from emp where deptno=10 and mgr is not null;
	32.案例：查询emp表中名字中包含'E'，并且职位不是MANAGER的员工的编号，姓名，职位，以及工资。	
	select empno,ename,job,sal from emp where ename like '%e%' and job!='manager';
	33.案例：查询emp表中10号部门或者20号部门中员工的编号，姓名，所属部门的编号
	select empno,ename,deptno from emp where deptno in(10,20);
	34.案例：查询emp表中没有奖金或者名字的倒数第2个字母不是T的员工的编号，姓名，职位以及奖金
	select empno,ename,job,comm from emp where comm=0 or ename not like '%t_';
	35.案例：查询工资高于3000或者部门编号是30的员工的姓名，职位，工资，入职时间以及所属部门的编号
	select ename,job,sal,hiredate,deptno from emp where sal>3000 or deptno=30;	
	36.案例：查询不是30号部门的员工的所有信息
	select * from emp where deptno!=30;
	37.案例：查询奖金不为空的员工的所有信息
	select * from emp where comm is not null;
	38.案例：查询emp表中所有员工的编号，姓名，职位，根据员工的编号进行降序排列
	select empno,ename,job from emp order by empno desc;
	39.案例：查询emp表中部门编号是10号或者30号中，所有员工姓名，职务，工资，根据工资进行升序排列
	select ename,job,sal from emp where deptno in(10,30) order by sal;
	40.案例：查询emp表中所有的数据，然后根据部门的编号进行升序排列，如果部门编号一致，根据员工的编号进行降序排列
	select * from emp order by deptno,empno desc;
	41.案例：查询emp表中工资高于1000或者没有上级领导的员工的编号，姓名，工资，所属部门的编号，以及上级领导的编号，根据部门编号进行降序排列，如果部门编号一致根据工资进行升序排列。
	select empno,ename,sal,deptno,mgr from emp where sal>1000 or mgr is null order by deptno desc,sal;
	42.案例：查询emp表中名字中不包含S的员工的编号，姓名，工资，奖金，根据工资进行升序排列，如果工资一致，根据编号进行降序排列
	select empno,ename,sal,comm from emp where ename not like '%s%' order by sal,empno desc;
	43.案例：统计emp表中员工的总数量
	select count(*) from emp;
	44.案例：统计emp表中获得奖金的员工的数量
	select count(*) from emp where comm>0;
	45.案例：求出emp表中所有的工资累加之和
	select sum(sal) from emp;
	46.案例：求出emp表中所有的奖金累加之和
	select sum(comm) from emp;
	47.案例：求出emp表中员工的平均工资
	select avg(sal) from emp;
	48.案例：求出emp表中员工的平均奖金
	select avg(comm) from emp;
	49.案例：求出emp表中员工的最高工资
	select max(sal) from emp;
	50.案例：求出emp表中员工编号的最大值
	select max(empno) from emp;
	51.案例：查询emp表中员工的最低工资。
	select min(sal) from emp;
	52.案例：查询emp表中员工的人数，工资的总和，平均工资，奖金的最大值，奖金的最小值,并且对返回的列起别名。
	select count(*) 人数,sum(sal) 工资总和, avg(sal) 平均工资,max(comm) 最高奖金, min(comm) 最底奖金 from emp;
	53.案例：查询emp表中每个部门的编号，人数，工资总和，最后根据人数进行升序排列，如果人数一致，根据工资总和降序排列。
	54.案例：查询工资在1000~3000之间的员工信息，每个部门的编号，平均工资，最低工资，最高工资，根据平均工资进行升序排列。
	55.案例：查询含有上级领导的员工，每个职业的人数，工资的总和，平均工资，最低工资，最后根据人数进行降序排列，如果人数一致，根据平均工资进行升序排列
	56.案例：查询工资在1000~3000之间每一个员工的编号，姓名，职位，工资
	select empno,ename,job,sal from emp 
	where sal between 1000 and 3000;
	58.案例：查询员工的编号是7369，7521
	select * from emp where empno in (7369,7521);
	59.案例：查询emp表中，职位是ANALYST，
	select * from emp where job='analyst';
	60.案例：查询emp表中职位不是ANALYST,
	select * from emp where job!='analyst';

###分组查询
- group by 字段名
- 每个xxx就以xxx进行分组
1. 查询每个部门的平均工资
	select deptno,avg(sal) from emp group by deptno;
2. 查询每种职业的最高工资
	select job,max(sal) from emp group by job;
3. 查询每个部门的人数
	select deptno,count(*) from emp group by deptno;
4. 查询每个分类的商品平均价格
	select category_id,avg(price) from t_item group by category_id;
5. 查询每个主管(mgr)的手下人数
	select mgr,count(*) from emp where mgr is not null
	group by mgr;
53. 案例：查询emp表中每个部门的编号，人数，工资总和，最后根据人数进行升序排列，如果人数一致，根据工资总和降序排列。
	select deptno,count(*),sum(sal) from emp group by deptno order by count(*),sum(sal) desc;
	
	select deptno,count(*) c,sum(sal) s from emp group by deptno order by c,s desc;
	
54. 案例：查询工资在1000~3000之间的员工信息，每个部门的编号，平均工资，最低工资，最高工资，根据平均工资进行升序排列。
	select deptno,avg(sal) a,min(sal),max(sal) from emp where sal between 1000 and 3000 group by deptno order by a;
55. 案例：查询含有上级领导的员工，每个职业的人数，工资的总和，平均工资，最低工资，最后根据人数进行降序排列，如果人数一致，根据平均工资进行升序排列
	select job,count(*) c,sum(sal),avg(sal) a,min(sal) from emp
	where mgr is not null
	group by job order by c desc,a; 

- 通过多个字段进行分组统计
	1. 统计每个部门下每个主管的手下人数
	select deptno,mgr,count(*) from emp where mgr is not null group by deptno,mgr;
### having
- 聚合函数条件不能写在where后面，where后面只能写普通字段的条件
- having后面写聚合函数的条件，虽然也支持普通字段的条件，但是不推荐使用
- having要和分组查询结合使用
- select ..... from 表名 where .... group by .... having.... order by.... limit... ;	
1. 查询平均工资大于2000的部门编号和平均工资
	- 错误写法：	
	select deptno,avg(sal) from emp where avg(sal)>2000 group by deptno;
	- 正确写法
	select deptno,avg(sal) a from emp 
	group by deptno having a>2000;
2. 查询每个分类的平均单价 要求平均单价低于100
	select category_id,avg(price) a from t_item
	group by category_id having a<100;
3. 查询238和917两个分类的平均单价
	select category_id c,avg(price) from t_item
	where category_id in(238,917) group by c;
4. 查询emp表中每个部门的平均工资高于2000的部门编号，部门人数，平均工资，最后根据平均工资降序排序
	select deptno,count(*),avg(sal) a from emp group by deptno
	having a>2000 order by a desc;
5. 查询emp表中工资在1000到3000之间的员工，每个部门的编号，工资总和，平均工资，过滤掉平均工资低于2000的部门，按照平均工资升序排序。
	select deptno,sum(sal),avg(sal) a from emp where sal between 1000 and 3000 group by deptno having a>=2000 order by a;
6. 查询emp表中不是以s开头的职位，每个职位的名字，人数，工资总和，最高工资，过滤掉平均工资是3000的职位，根据人数升序排序 如果人数一致则根据工资总和降序排序
	select job,count(*) c,sum(sal) s,max(sal) from emp 
	where job not like 's%' group by job 
	having avg(sal)!=3000 order by c,s desc;
7. 查询每年入职的人数（扩展题）
	select extract(year from hiredate) from emp;
	select extract(year from hiredate) y,count(*) from emp group by y;
8. 查询最高平均工资的部门编号（提高题）
	select deptno from emp 
	group by deptno order by avg(sal) desc limit 0,1;
	
###子查询（嵌套查询）
1. 查询员工表中工资最高的员工信息
	select max(sal) from emp;
	select * from emp where sal=(select max(sal) from emp);
2. 查询emp表中工资大于平均工资的所有员工信息
	select avg(sal) from emp;
	select * from emp where sal>(select avg(sal) from emp);
3. 查询工资高于20号部门最大工资的员工信息
	select max(sal) from emp where deptno=20;
	select * from emp where sal>(select max(sal) from emp where deptno=20);
4. 查询和Jones相同工作的的其他员工信息
	select job from emp where ename='jones';
	select * from emp where job=(select job from emp where ename='jones') and ename!='Jones';
5. 查询最低工资的员工的一个部门其他员工信息
	select min(sal) from emp;
	-查询工资为800的员工的所占部门编号
	select deptno from emp where sal=(select min(sal) from emp);
	-查询20号部门的所有员工信息
	select * from emp where deptno=(select deptno from emp where sal=(select min(sal) from emp));
	-排除掉800的员工
	select * from emp where deptno=(select deptno from emp where sal=(select min(sal) from emp)) and sal!=(select min(sal) from emp);
6. 查询员工king 的部门编号和部门名称(需要用到dept表)  
	select deptno from emp where ename='king';
	select deptno,dname from dept where deptno=(select deptno from emp where ename='king');
7. 查询有员工的部门信息（有一个部门没有员工，想办法去掉）
	select distinct deptno from emp;
	select * from dept where deptno in(select distinct deptno from emp);
8. 查询平均工资最高的部门信息（难度最大，需要考虑并列第一）
	-得到最高的平均工资
	select avg(sal) a from emp group by deptno order by a desc limit 0,1;
	-通过最高的平均工资查找对应的部门编号
	select deptno from emp group by deptno having avg(sal)=(select avg(sal) a from emp group by deptno order by a desc limit 0,1);
	-通过得到的部门编号查询部门信息
	select * from dept where deptno in(上面一坨);
- 写在SQL语句中的查询语句称为子查询 
- 子查询可以嵌套无数层
- 子查询可以写在哪些位置？
1. 写在where和having的后面当做查询条件的值。
2. 可以写在创建表的时候 

	create table emp_10 as (select * from emp where deptno=10);
3. 写在from的后面当成一张虚拟表   **必须起别名**
	
	select ename from (select * from emp where deptno=10) nt;
	
###关联查询
- 同时查询多张表的查询方式称为关联查询
1. 查询每个员工的姓名和对应的部门名称
	select e.ename,d.dname
	from emp e,dept d
	where e.deptno=d.deptno;
2. 查询king的姓名、工资、部门名称、工作地点
	select e.ename,e.sal,d.dname,d.loc
	from emp e,dept d
	where e.deptno=d.deptno	
	and ename='king';
###笛卡尔积
- 如果关联查询不写关联关系会得到两张表数据的乘积，这个乘积称为笛卡尔积
- 工作中切记不要出现，如果数据量大，会占用大量内存，甚至系统崩溃
###等值连接和内连接
- 这两种都是关联查询的查询方式
- 得到的数据是两张表的交集数据
- 等值连接： select * from A,B where A.x=B.x and A.age=18;
- 内连接： select * from A ?inner join B on A.x=B.x where A.age=18;
1. 查询每个员工的姓名和对应的部门名称
	select e.ename,d.dname
	from emp e join dept d
	on e.deptno=d.deptno;
2. 查询工资大于2000的员工姓名和工作地点
	select e.ename,d.loc
	from emp e join dept d
	on e.deptno=d.deptno
	where sal>2000;
###外连接
- 查询一张表的全部数据和另外一张表的交集数据
- 格式：  select * from A left/right join B on A.x=B.x where A.age=18;
1. 查询所有部门的编号、名称和对应的员工名称
	select  d.deptno,d.dname,e.ename
	from emp e right join dept d
	on e.deptno=d.deptno;

####关联查询总结 
- 三种查询方式：
- 等值连接和内连接查询结果一样，得到交集数据，推荐使用内连接
- 外连接分为左外和右外得到的是一张表的全部数据和另外一张表的交集数据



###课程回顾
1. 分组 group by
2. having  
3. 子查询 
4. 关联查询

###作业

 1. 每个部门的人数,根据人数排序
	 
  2. 每个部门中，每个主管的手下人数
	 
  3. 每种工作的平均工资
	 
  4. 每年的入职人数 
	 
  5. 少于等于3个人的部门信息
 
  6. 拿最低工资的员工信息
	 
  7. 只有一个下属的主管信息
 

  8. 平均工资最高的部门编号
	     
  9. 下属人数最多的人，查询其个人信息
 
  10. 拿最低工资的人的信息
		 
  11. 最后入职的员工信息
		 
  12. 工资多于平均工资的员工信息
		 
  13. 查询员工信息，部门名称
        
  14. 员工信息，部门名称，所在城市
       
  15. DALLAS 市所有的员工信息
		 
  16. 按城市分组，计算每个城市的员工数量
		 
  17. 查询员工信息和他的主管姓名
	 
  18. 员工信息，员工主管名字，部门名
	 
  20. 员工和他所在部门名
		 
  22. 案例：查询emp表中所有员工的姓名以及该员工上级领导的编号，姓名，职位，工资
		 
  23. 案例：查询emp表中名字中没有字母'K'的所有员工的编号，姓名，职位以及所在部门的编号，名称，地址
		 
  24. 案例：查询dept表中所有的部门的所有的信息，以及与之关联的emp表中员工的编号，姓名，职位，工资

###作业
 1. 每个部门的人数,根据人数排序
	select deptno,count(*) c from emp group by deptno
	order by c;
  2. 每个部门中，每个主管的手下人数
	select deptno,mgr,count(*) from emp 
	where mgr is not null group by deptno,mgr;
  3. 每种工作的平均工资
	select job,avg(sal) from emp group by job;
  4. 每年的入职人数 
	select extract(year from hiredate) y,count(*) from emp 
	group by y;
  5. 少于等于3个人的部门信息
	select deptno from emp group by deptno having count(*)<=3;
	select * from dept where deptno in(select deptno from emp group by deptno having count(*)<=3);
	-考虑40号部门
	select d.deptno
	from emp e right join dept d
	on e.deptno=d.deptno 
	group by d.deptno
	having count(e.ename)<=3;
	
	select * from dept where deptno in (上面一坨);
  6. 拿最低工资的员工信息
	select * from emp where sal=(select min(sal) from emp);
  7. 只有一个下属的主管信息
	select mgr from emp 
	where mgr is not null group by mgr having count(*)=1;
	
	select * from emp where empno in (select mgr from emp 
	where mgr is not null group by mgr having count(*)=1);
  8. 平均工资最高的部门编号
	select avg(sal) a from emp group by deptno order by a desc limit 0,1;
	
	select deptno from emp group by deptno having avg(sal)=(select avg(sal) a from emp group by deptno order by a desc limit 0,1);
  9. 下属人数最多的人，查询其个人信息
	- 得到最多的下属人数	
	select count(*) from emp group by mgr order by count(*) desc limit 0,1;
	- 通过人数找对应的mgr值
	select mgr from emp group by mgr having count(*)=(select count(*) from emp group by mgr order by count(*) desc limit 0,1);
	- 通过主管编号得到主管信息
	select * from emp where empno in (上面一坨);

  11. 最后入职的员工信息
	select * from emp where hiredate=(select max(hiredate) from emp); 
  12. 工资多于平均工资的员工信息
	select * from emp where sal>(select avg(sal) from emp);
  13. 查询员工信息，部门名称
	select e.*,d.dname
	from emp e join dept d
	on e.deptno=d.deptno;
  14. 员工信息，部门名称，所在城市
      select e.*,d.dname,d.loc
	from emp e join dept d
	on e.deptno=d.deptno; 
  15. DALLAS 市所有的员工信息
	select e.*
	from emp e join dept d
	on e.deptno = d.deptno
	where d.loc='dallas';	 
  16. 按城市分组，计算每个城市的员工数量
	select d.loc,count(e.ename)
	from emp e right join dept d
	on e.deptno=d.deptno
	group by d.loc;
  17. 查询员工信息和他的主管姓名
- 自关联的查询方式： 把一张表当成两张表 通过内连接把两个表连接起来查询
	select e.ename,m.ename
	from emp e left join emp m
	on e.mgr=m.empno;

  18. 员工信息，员工主管名字，部门名
	 select e.ename,m.ename,d.dname
	from emp e left join emp m
	on e.mgr=m.empno
	join dept d
	on e.deptno=d.deptno;

  20. 员工和他所在部门名
	select e.ename,d.dname
	from emp e join dept d
	on e.deptno=d.deptno;	
  22. 案例：查询emp表中所有员工的姓名以及该员工上级领导的编号，姓名，职位，工资
	select e.ename,m.empno,m.ename,m.job,m.sal
	from emp e left join emp m
	on e.mgr=m.empno;
  23. 案例：查询emp表中名字中没有字母'K'的所有员工的编号，姓名，职位以及所在部门的编号，名称，地址
	select e.empno,e.ename,e.job,d.*
	from emp e join dept d
	on e.deptno=d.deptno
	where e.ename not like '%k%';	

  24. 案例：查询dept表中所有的部门的所有的信息，以及与之关联的emp表中员工的编号，姓名，职位，工资
	select d.*,e.empno,e.ename,e.job,e.sal
	from emp e right join dept d
	on e.deptno=d.deptno;











	


	

